.Object Name: link_to                                      Define: Helper_Link_To
*    Version: 0001
*
*===============================================================================
:INCLUDE,ECAB$,B,0002 .

@. #############################################################################
@. # This is used as a utitlity to build a link based on the routes            #
@. # action=<f_action>                                                         #
@. # method=<f_meth>                                                           #
@. # class=<f_class>                                                           #
@. # id=<f_id>                                                                 #
@. #############################################################################

@0001:(<category>,<service>,<action>,<link_to>) .
@     fdr,Table_Routes '' 'service','action' 	,<service>,<action> .
@     rln 'params' <input>s .
@.
@. ---- Load the <params> variable for the paramaters to pass in the re-direct ----
@     if <input> gt '' . ; ldv <params>s0 gto 0005 .
@     lcv 'b99' <input> '&' ,<vocc>i7 .                             Find the total nubmer of params
@     ldv <vcnt>i7=0 .                                              Initialize the variable counter
@0002:if <vcnt> eq <vocc>,(0005) . ; inc <vcnt> .                   Are we done??
@     lcv 'b<vcnt>' <input> '&' <begkeypos>i7 .                  Find the start of the key
@     lcv 'b<vcnt>' <input> '=' <endkeypos>i7 inc <endkeypos> .  Find the end of the key
@     chg <s>i7 <endkeypos> - <begkeypos> .                         Get the key length
@     ldv,p <key>s<s>=<input>(<begkeypos>-<endkeypos>) .         Load the key from <input>
@. ---- Check if variable or string ----
@     lcv 'b<vcnt>' <input> '<' <begvarpos>i7 inc <begvarpos> .  Find the start of the value
@     lcv 'b<vcnt>' <input> '>' <endvarpos>i7 .                  Find the end of the value
@     chg <varsize>i7 <endvarpos> - <begvarpos> .                   Determine the value size
@     ldv,p <var_name>s12=<input>(<begvarpos>-<varsize>) .       Get the variable name
@     ldv,p <value>s256=<<var_name>> .                              Load the value from the <<name>>
@     def,,lin1 <t>i2,<params> ldv <params>=<params>(p)<key><value> gto lin+2 .
@     ldv <params>s998=<key><value> .
@     gto 0002 .
@0005:.
@     ldv,p <params> .
@.
@. ---- Load the <link_to> variable ----
@     ldv,p <link_to>=<*gurlcat>(p)<service>'&action='<action>'<params> .
@.
@     return .
